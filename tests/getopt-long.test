#! /bin/sh
exec ${MES-bin/mes} --no-auto-compile -L ${0%/*} -L module -C module -e '(tests getopt-long)' -s "$0" "$@"
!#

;;; -*-scheme-*-

;;; GNU Mes --- Maxwell Equations of Software
;;; Copyright Â© 2017,2018 Jan (janneke) Nieuwenhuizen <janneke@gnu.org>
;;;
;;; This file is part of GNU Mes.
;;;
;;; GNU Mes is free software; you can redistribute it and/or modify it
;;; under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 3 of the License, or (at
;;; your option) any later version.
;;;
;;; GNU Mes is distributed in the hope that it will be useful, but
;;; WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with GNU Mes.  If not, see <http://www.gnu.org/licenses/>.

(define-module (tests getopt-long)
  #:use-module (mes mes-0)
  #:use-module (mes test)
  #:use-module (mes getopt-long))

(cond-expand
 (mes
  (mes-use-module (mes getopt-long))
  (mes-use-module (mes test)))
 (else))

(pass-if "first dummy" #t)
(pass-if-not "second dummy" #f)

(define option-spec '((help (single-char #\h))
                      (include (single-char #\I) (value #t))
                      (version (single-char #\V))))

(pass-if-equal "getopt" '((() "bar"))
  (getopt-long '("foo" "bar") option-spec))

(pass-if-equal "getopt2" '((() "bar" "baz"))
  (getopt-long '("foo" "bar" "baz") option-spec))

(pass-if-equal "getopt --help" '((()) (help . #t))
  (getopt-long '("foo" "--help") option-spec))

(pass-if-equal "getopt -hVI5d" '((()) (include . "5d") (version . #t) (help . #t))
  (getopt-long '("foo" "-hVI5d") option-spec))

(pass-if-equal "getopt -I." '((()) (include . "."))
  (getopt-long '("foo" "-I.") option-spec))

(pass-if-equal "getopt -I foo ..." '((()) (include . "lib") (include . "include"))
  (getopt-long '("foo" "-I" "include" "-I" "lib") option-spec))

(result 'report)
